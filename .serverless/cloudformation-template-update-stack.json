{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ApiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/sheet-whatsappbot-dev-api"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "sheet-whatsappbot",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sheet-whatsappbot-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sheet-whatsappbot-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "sheet-whatsappbot",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::802587217904:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "ServerlessEnterprise-1dd614fa-3495-4fa8-9685-1bfe51a5acda"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LogFilterAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:FilterLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ApiLogGroup",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "ApiLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/sheet-whatsappbot/dev/1698696512208-2023-10-30T20:08:32.208Z/sheet-whatsappbot.zip"
        },
        "Handler": "index.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "sheet-whatsappbot-dev-api",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "CLIENT_EMAIL": "abhinav@priceseekr-397015.iam.gserviceaccount.com",
            "PRIVATE_KEY": {
              "privateKey": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDLqC9QlbfGpYtD\nQsYtiL8BWeidP4mTPVpabxBwWBVWRg13mwPN+Rzy28XFoDCkn0dEEQpgVGHUb3wA\nYIF351SaYY507PM8wZNBBVjZpOncpNJq2MKsA3iQ6Dhs4PYotDhDl1Xe88daMVfb\noCskwRAFok4zuU5JYcvoD5fQvqh3fOy81kp89jKRT42oN4F8VwYNqty4DbY7wXtY\nFNU1nkOSdXNFM8zLrpQweSGouh01wSfDDYUnD2OYWJM3J3/Z3rzQu4ObB/+uhaFF\nTD5teY0UsdoJKyFJmLAYevL0PgX945WMJ2noHmVQrvjKhzvetr/BiQlgBDUYpAsF\nZdcGnlSjAgMBAAECggEAIySRjZlYThoQ7vld00uukiAeqMvnBJZougRCVPCONgX+\nmu4P+QIMwce02AZtfmrR1GgQX1EQVKUsQ7BjhvpPOhitiXW9/3Tz4Rt4Go5/oIh8\nmt1usloi+vZnjjo/oASBVQCPW9q7QtAS9h4sc7ow9pfsYLaQUM9kbVYLf4T28y83\nin99E+6wGK6hVRcydHYqe0YtqIIBLvCgA1fdXBrBRR3LdZ0P/jmu3fin8kNpPj5U\nQ6HxBo7SeKnMd+DmbbE3n6ommuqVo0DnhQ2kZeXCSK4j0sUCl7YGW+DdMyuZLcSo\nKkgtlrvBbEffDwe30+9gRTfLf1IjVO8gyqEZe+DMGQKBgQDxSkHQaWCMQ7igEOBB\na2rF6ephfbL1pO3VPBT3jVqF0ZKrr1Ar9R2m5N/2ghSWkGmRyBezR+Vz0hHRxeZ+\nSvONIKnkBrgZ6C7gtJc+7OdAd0H/DQRTOVtkq8o0yu7Hsxo1FZtIHU3jNvWtod0e\nzxNSvvKWbp9s99pzZyvLqVQwNwKBgQDYEplgQs9w2WDTYlA4cfm+TrOgCuSG7zSO\n6Ebt+qj8wTOI6uDxgmMV0rSslxkqhZHXcmkA97ptSOhP0BJBCovmks30q3FR0vU8\n40KJNmjeqG3IuBYdBuv1eYU7qMJvLe2qSH8NA31E3fS1JZF85AM4Y36YoXLY2uWr\nC8TUCl1Q9QKBgBzGxmKcrq8LxJEScixbKzi/VPybiSRSryqnJ7j+WrVq8RsYpW8Y\npJiq4yr7CImMX4rLWkg/YtYVT5q9B2g4eCN0qc5QHtS4JB8YapFOn6XIk05ftwxV\n4th2xH7XVPLsIUwDb6mCFS/r9hDnJP/volZT/4qBVvIf/SWWQFrhrvCxAoGAM3FC\nKOPfJXvrjIgklzuzfPaZ12mgfOuodLmiYXhDEWIiFd/tzDIByylOMKUMrc39KfEo\nRL22Gdy4yn+8SNXs9ulOtYi3wwZZsrRcm/RjRVeOQ7JoOWLzfI8BBHIqUHP72IXI\nEd4ZzfKWFyapm7VheuRdOJN/l1eORInZw63wB50CgYEAt43ffYt+eYQWlBUE/DAf\n/iy300cIweAukcccxFRHyk8BeQjn7BPm48W6LSohdveuPH2VCrl/TKQXRkigoVAV\nwerqu3Xi/+lYyHzHu8vWHaVHU+Nlp/64G2SVkvxAzRIptpegKKzGkA/rDBYa6zFS\nSW4WX0IZEmSVQBjVs6O/9rE=\n-----END PRIVATE KEY-----\n"
            },
            "VERIFY_TOKEN": "HAPPY",
            "WHATSAPP_TOKEN": "EAAE6w7rYHZAgBOyZC65VHBMn7RGh390b2ZBJ3VCdBqEpcapQGlEFsAV4P9cGwE5uWXEPWQl6rcOT9PBPU5LtVU7TJ99pEPOki53VZBpxMQx5FLuSZCjIjVvG7ISwgOmCrRtpjk5I10nuCiCtc4evpEh9ZCxMYjq0XwkPWjNMNQRo12A4NtidoJsw0f5N2BdkuJI4GBYsmHky4EWlBM6Id2ZBRgF2fJvJmKExwIZD"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ApiLogGroup"
      ]
    },
    "ApiLambdaVersionoCRuibvc1EPk4ZxAlBx959wmAwuMS6YHiBG26NO350": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ApiLambdaFunction"
        },
        "CodeSha256": "dfNuM2fF6JeNaLBATSAFMZIXCHFSYoEuX3CrqwPZeag="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-sheet-whatsappbot",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProxyVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ApiLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ApiLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1698696479817": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodProxyVarAny",
        "ApiGatewayMethodAny"
      ]
    },
    "ApiLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ApiGatewayLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/api-gateway/sheet-whatsappbot-dev"
      }
    },
    "CustomApiGatewayAccountCloudWatchRole": {
      "Type": "Custom::ApiGatewayAccountRole",
      "Version": 1,
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "IamRoleCustomResourcesLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "sheet-whatsappbot",
                  "custom-resources-lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "iam:",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "role/*"
                      ]
                    ]
                  },
                  "Action": [
                    "iam:AttachRolePolicy",
                    "iam:CreateRole",
                    "iam:ListAttachedRolePolicies",
                    "iam:PassRole"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "apigateway:*::/account"
                      ]
                    ]
                  },
                  "Action": [
                    "apigateway:GET",
                    "apigateway:PATCH"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/sheet-whatsappbot/dev/1698696512208-2023-10-30T20:08:32.208Z/custom-resources.zip"
        },
        "FunctionName": "sheet-whatsappbot-dev-custom-resource-apigw-cw-role",
        "Handler": "api-gateway-cloud-watch-role/handler.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs16.x",
        "Timeout": 180,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleCustomResourcesLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IamRoleCustomResourcesLambdaExecution"
      ]
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-sheet-whatsappbot-dev-ServerlessDeploymentBucketName"
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Value": {
        "Fn::GetAtt": [
          "EnterpriseLogAccessIamRole",
          "Arn"
        ]
      },
      "Export": {
        "Name": "sls-sheet-whatsappbot-dev-EnterpriseLogAccessIamRole"
      }
    },
    "ApiLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ApiLambdaVersionoCRuibvc1EPk4ZxAlBx959wmAwuMS6YHiBG26NO350"
      },
      "Export": {
        "Name": "sls-sheet-whatsappbot-dev-ApiLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-sheet-whatsappbot-dev-ServiceEndpoint"
      }
    }
  }
}